# Generated by Django 5.0.14 on 2025-06-13 12:48

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='JustGoMemberMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('justgo_member_id', models.CharField(help_text='JustGo member GUID', max_length=100, unique=True)),
                ('justgo_mid', models.CharField(blank=True, help_text='JustGo Member ID (MID)', max_length=20)),
                ('justgo_member_doc_id', models.IntegerField(blank=True, help_text='JustGo member document ID', null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending Verification'), ('CONFLICT', 'Conflict Detected'), ('ARCHIVED', 'Archived')], default='PENDING', help_text='Status of the mapping', max_length=15)),
                ('confidence_score', models.FloatField(default=1.0, help_text='Confidence score of the mapping (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('last_synced_at', models.DateTimeField(blank=True, help_text='When the mapping was last synchronized', null=True)),
                ('last_sync_direction', models.CharField(blank=True, help_text='Direction of last sync (local_to_justgo, justgo_to_local)', max_length=20)),
                ('sync_conflicts', models.JSONField(blank=True, default=list, help_text='List of sync conflicts detected')),
                ('verified_at', models.DateTimeField(blank=True, help_text='When the mapping was verified', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mapping_metadata', models.JSONField(blank=True, default=dict, help_text='Additional mapping metadata and configuration')),
                ('local_user', models.OneToOneField(help_text='Local user account', on_delete=django.db.models.deletion.CASCADE, related_name='justgo_mapping', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, help_text='User who verified this mapping', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_mappings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JustGoCredentialCache',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('justgo_credential_id', models.CharField(help_text='JustGo credential ID', max_length=100)),
                ('credential_type', models.CharField(help_text='Type of credential', max_length=100)),
                ('credential_name', models.CharField(help_text='Name of the credential', max_length=255)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('PENDING', 'Pending'), ('SUSPENDED', 'Suspended'), ('REVOKED', 'Revoked')], help_text='Current status of the credential', max_length=15)),
                ('issued_date', models.DateField(blank=True, help_text='Date the credential was issued', null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Date the credential expires', null=True)),
                ('cached_at', models.DateTimeField(auto_now_add=True, help_text='When this credential was cached')),
                ('last_verified_at', models.DateTimeField(blank=True, help_text='When this credential was last verified with JustGo', null=True)),
                ('credential_data', models.JSONField(blank=True, default=dict, help_text='Full credential data from JustGo')),
                ('member_mapping', models.ForeignKey(help_text='Associated member mapping', on_delete=django.db.models.deletion.CASCADE, related_name='cached_credentials', to='integrations.justgomembermapping')),
            ],
            options={
                'ordering': ['-cached_at'],
            },
        ),
        migrations.CreateModel(
            name='JustGoSync',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sync_type', models.CharField(choices=[('LOCAL_TO_JUSTGO', 'Local to JustGo'), ('JUSTGO_TO_LOCAL', 'JustGo to Local'), ('BIDIRECTIONAL', 'Bidirectional'), ('CREDENTIAL_SYNC', 'Credential Sync'), ('BULK_SYNC', 'Bulk Sync')], help_text='Type of synchronization operation', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('PARTIAL', 'Partial Success'), ('CANCELLED', 'Cancelled')], default='PENDING', help_text='Current status of the sync operation', max_length=15)),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='When the sync was started')),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the sync was completed', null=True)),
                ('total_records', models.PositiveIntegerField(default=0, help_text='Total number of records to sync')),
                ('processed_records', models.PositiveIntegerField(default=0, help_text='Number of records processed')),
                ('successful_records', models.PositiveIntegerField(default=0, help_text='Number of records successfully synced')),
                ('failed_records', models.PositiveIntegerField(default=0, help_text='Number of records that failed to sync')),
                ('sync_config', models.JSONField(blank=True, default=dict, help_text='Configuration parameters for the sync')),
                ('sync_results', models.JSONField(blank=True, default=dict, help_text='Detailed results of the sync operation')),
                ('error_details', models.JSONField(blank=True, default=list, help_text='List of errors encountered during sync')),
                ('is_admin_override', models.BooleanField(default=False, help_text='Whether this sync was performed with admin override')),
                ('override_justification', models.TextField(blank=True, help_text='Justification for admin override if applicable')),
                ('progress_percentage', models.FloatField(default=0.0, help_text='Progress percentage (0-100)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('current_operation', models.CharField(blank=True, help_text='Description of current operation', max_length=255)),
                ('initiated_by', models.ForeignKey(help_text='User who initiated the sync', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_syncs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', help_text='Log level', max_length=10)),
                ('operation_type', models.CharField(choices=[('AUTHENTICATION', 'Authentication'), ('MEMBER_LOOKUP', 'Member Lookup'), ('MEMBER_CREATE', 'Member Create'), ('MEMBER_UPDATE', 'Member Update'), ('CREDENTIAL_LOOKUP', 'Credential Lookup'), ('SYNC_OPERATION', 'Sync Operation'), ('HEALTH_CHECK', 'Health Check'), ('ADMIN_OVERRIDE', 'Admin Override'), ('OTHER', 'Other')], help_text='Type of operation', max_length=20)),
                ('message', models.TextField(help_text='Log message')),
                ('session_key', models.CharField(blank=True, help_text='Session key', max_length=40)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the request', null=True)),
                ('api_endpoint', models.CharField(blank=True, help_text='JustGo API endpoint called', max_length=255)),
                ('http_method', models.CharField(blank=True, help_text='HTTP method used', max_length=10)),
                ('status_code', models.IntegerField(blank=True, help_text='HTTP status code returned', null=True)),
                ('response_time_ms', models.IntegerField(blank=True, help_text='Response time in milliseconds', null=True)),
                ('request_data', models.JSONField(blank=True, default=dict, help_text='Request data (sensitive data excluded)')),
                ('response_data', models.JSONField(blank=True, default=dict, help_text='Response data (sensitive data excluded)')),
                ('error_details', models.JSONField(blank=True, default=dict, help_text='Error details if applicable')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata')),
                ('user', models.ForeignKey(blank=True, help_text='User associated with the operation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='integration_logs', to=settings.AUTH_USER_MODEL)),
                ('sync_operation', models.ForeignKey(blank=True, help_text='Associated sync operation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='integrations.justgosync')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='justgomembermapping',
            index=models.Index(fields=['justgo_member_id'], name='integration_justgo__6b2565_idx'),
        ),
        migrations.AddIndex(
            model_name='justgomembermapping',
            index=models.Index(fields=['justgo_mid'], name='integration_justgo__929948_idx'),
        ),
        migrations.AddIndex(
            model_name='justgomembermapping',
            index=models.Index(fields=['status', 'confidence_score'], name='integration_status_b6b767_idx'),
        ),
        migrations.AddIndex(
            model_name='justgomembermapping',
            index=models.Index(fields=['last_synced_at'], name='integration_last_sy_05758b_idx'),
        ),
        migrations.AddIndex(
            model_name='justgocredentialcache',
            index=models.Index(fields=['credential_type', 'status'], name='integration_credent_58541b_idx'),
        ),
        migrations.AddIndex(
            model_name='justgocredentialcache',
            index=models.Index(fields=['expiry_date'], name='integration_expiry__248dbc_idx'),
        ),
        migrations.AddIndex(
            model_name='justgocredentialcache',
            index=models.Index(fields=['status', 'expiry_date'], name='integration_status_1a2cf9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='justgocredentialcache',
            unique_together={('member_mapping', 'justgo_credential_id')},
        ),
        migrations.AddIndex(
            model_name='justgosync',
            index=models.Index(fields=['status', 'sync_type'], name='integration_status_8ea061_idx'),
        ),
        migrations.AddIndex(
            model_name='justgosync',
            index=models.Index(fields=['initiated_by', 'started_at'], name='integration_initiat_a90016_idx'),
        ),
        migrations.AddIndex(
            model_name='justgosync',
            index=models.Index(fields=['started_at'], name='integration_started_fa6606_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['level', 'operation_type'], name='integration_level_7c4f8b_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['user', 'timestamp'], name='integration_user_id_b76317_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['api_endpoint', 'timestamp'], name='integration_api_end_458773_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['status_code', 'timestamp'], name='integration_status__452d16_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['sync_operation', 'timestamp'], name='integration_sync_op_e3fc7f_idx'),
        ),
    ]
