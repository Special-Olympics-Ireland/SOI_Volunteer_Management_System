# Generated by Django 5.0.14 on 2025-06-13 10:37

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0003_assignment_and_more'),
        ('tasks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskCompletion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('completion_type', models.CharField(choices=[('CHECKBOX', 'Checkbox Completion'), ('PHOTO_UPLOAD', 'Photo Upload'), ('TEXT_SUBMISSION', 'Text Submission'), ('CUSTOM_FIELDS', 'Custom Field Submission'), ('FILE_UPLOAD', 'File Upload'), ('EXTERNAL_VERIFICATION', 'External Verification')], help_text='Type of completion based on task type', max_length=25)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Submission'), ('SUBMITTED', 'Submitted for Review'), ('UNDER_REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('REVISION_REQUIRED', 'Revision Required'), ('VERIFIED', 'Verified Complete'), ('CANCELLED', 'Cancelled')], default='PENDING', help_text='Current completion status', max_length=20)),
                ('completion_data', models.JSONField(default=dict, help_text='Task completion data (photos, text, custom fields, etc.)')),
                ('submitted_at', models.DateTimeField(blank=True, help_text='When task was submitted for review', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When task was marked as completed', null=True)),
                ('time_started', models.DateTimeField(blank=True, help_text='When volunteer started working on task', null=True)),
                ('time_spent_minutes', models.PositiveIntegerField(blank=True, help_text='Actual time spent on task (in minutes)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1440)])),
                ('requires_verification', models.BooleanField(default=False, help_text='Whether this completion requires staff verification')),
                ('verified_at', models.DateTimeField(blank=True, help_text='When completion was verified', null=True)),
                ('verification_notes', models.TextField(blank=True, help_text='Notes from verification process')),
                ('quality_score', models.PositiveIntegerField(blank=True, help_text='Quality score (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback_from_staff', models.TextField(blank=True, help_text='Feedback from staff/supervisors')),
                ('feedback_from_volunteer', models.TextField(blank=True, help_text='Feedback from volunteer about the task')),
                ('revision_count', models.PositiveIntegerField(default=0, help_text='Number of times task was revised')),
                ('revision_notes', models.TextField(blank=True, help_text='Notes about required revisions')),
                ('attachments', models.JSONField(blank=True, default=list, help_text='File attachments for task completion evidence')),
                ('photos', models.JSONField(blank=True, default=list, help_text='Photo evidence for task completion')),
                ('completion_location', models.CharField(blank=True, help_text='Location where task was completed', max_length=200)),
                ('completion_context', models.JSONField(blank=True, default=dict, help_text='Additional context about completion (weather, conditions, etc.)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status_changed_at', models.DateTimeField(blank=True, help_text='When status was last changed', null=True)),
                ('status_change_reason', models.TextField(blank=True, help_text='Reason for status change')),
                ('send_notifications', models.BooleanField(default=True, help_text='Send notifications for status changes')),
                ('notification_preferences', models.JSONField(blank=True, default=dict, help_text='Notification preferences for this completion')),
                ('assignment', models.ForeignKey(blank=True, help_text='Assignment this completion is associated with', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_completions', to='events.assignment')),
                ('previous_completion', models.ForeignKey(blank=True, help_text='Previous completion if this is a revision', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revisions', to='tasks.taskcompletion')),
                ('status_changed_by', models.ForeignKey(blank=True, help_text='User who last changed the status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_changed_completions', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(help_text='Task being completed', on_delete=django.db.models.deletion.CASCADE, related_name='completions', to='tasks.task')),
                ('verified_by', models.ForeignKey(blank=True, help_text='Staff member who verified the completion', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_task_completions', to=settings.AUTH_USER_MODEL)),
                ('volunteer', models.ForeignKey(help_text='Volunteer completing the task', on_delete=django.db.models.deletion.CASCADE, related_name='task_completions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task Completion',
                'verbose_name_plural': 'Task Completions',
                'db_table': 'tasks_taskcompletion',
                'ordering': ['-created_at', 'task__title'],
                'indexes': [models.Index(fields=['task', 'volunteer'], name='tasks_taskc_task_id_d2bb28_idx'), models.Index(fields=['volunteer', 'status'], name='tasks_taskc_volunte_25b2bf_idx'), models.Index(fields=['task', 'status'], name='tasks_taskc_task_id_1aabf1_idx'), models.Index(fields=['assignment', 'status'], name='tasks_taskc_assignm_9531c7_idx'), models.Index(fields=['completion_type', 'status'], name='tasks_taskc_complet_27186e_idx'), models.Index(fields=['requires_verification', 'status'], name='tasks_taskc_require_9a9d79_idx'), models.Index(fields=['verified_by', 'verified_at'], name='tasks_taskc_verifie_f5d224_idx'), models.Index(fields=['submitted_at'], name='tasks_taskc_submitt_893665_idx'), models.Index(fields=['completed_at'], name='tasks_taskc_complet_bc53fb_idx'), models.Index(fields=['created_at'], name='tasks_taskc_created_f17cfc_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='taskcompletion',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('quality_score__gte', 1), ('quality_score__lte', 5)), ('quality_score__isnull', True), _connector='OR'), name='taskcompletion_quality_score_range'),
        ),
        migrations.AddConstraint(
            model_name='taskcompletion',
            constraint=models.CheckConstraint(check=models.Q(('time_spent_minutes__gte', 1), ('time_spent_minutes__isnull', True), _connector='OR'), name='taskcompletion_time_spent_positive'),
        ),
        migrations.AddConstraint(
            model_name='taskcompletion',
            constraint=models.CheckConstraint(check=models.Q(('revision_count__gte', 0)), name='taskcompletion_revision_count_non_negative'),
        ),
        migrations.AlterUniqueTogether(
            name='taskcompletion',
            unique_together={('task', 'volunteer', 'assignment')},
        ),
    ]
