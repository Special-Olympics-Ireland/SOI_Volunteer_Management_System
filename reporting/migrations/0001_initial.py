# Generated by Django 5.0.14 on 2025-06-13 15:25

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Report name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Report description')),
                ('report_type', models.CharField(choices=[('VOLUNTEER_SUMMARY', 'Volunteer Summary Report'), ('VOLUNTEER_DETAILED', 'Detailed Volunteer Report'), ('EVENT_SUMMARY', 'Event Summary Report'), ('EVENT_DETAILED', 'Detailed Event Report'), ('VENUE_UTILIZATION', 'Venue Utilization Report'), ('ROLE_ASSIGNMENT', 'Role Assignment Report'), ('TRAINING_STATUS', 'Training Status Report'), ('BACKGROUND_CHECK', 'Background Check Report'), ('JUSTGO_SYNC', 'JustGo Synchronization Report'), ('EOI_ANALYTICS', 'EOI Analytics Report'), ('PERFORMANCE_METRICS', 'Performance Metrics Report'), ('ATTENDANCE_TRACKING', 'Attendance Tracking Report'), ('CUSTOM', 'Custom Report')], max_length=30)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Report parameters and filters')),
                ('export_format', models.CharField(choices=[('CSV', 'CSV (Comma Separated Values)'), ('EXCEL', 'Excel (.xlsx)'), ('PDF', 'PDF Document'), ('JSON', 'JSON Data')], default='CSV', max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('GENERATING', 'Generating'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('file_path', models.CharField(blank=True, help_text='Path to generated file', max_length=500)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('generation_time', models.DurationField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_time', models.DurationField(blank=True, null=True)),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('export_time', models.DurationField(blank=True, null=True)),
                ('memory_usage_mb', models.PositiveIntegerField(default=0)),
                ('cpu_usage_percent', models.FloatField(default=0.0)),
                ('rows_processed', models.PositiveIntegerField(default=0)),
                ('columns_included', models.PositiveIntegerField(default=0)),
                ('filters_applied', models.JSONField(blank=True, default=list)),
                ('data_completeness_percent', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('warning_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='reporting.report')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_type', models.CharField(choices=[('LINK', 'Shareable Link'), ('EMAIL', 'Email Share'), ('API', 'API Access')], max_length=10)),
                ('share_token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('password_protected', models.BooleanField(default=False)),
                ('password_hash', models.CharField(blank=True, max_length=128)),
                ('can_download', models.BooleanField(default=True)),
                ('can_view_metrics', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('max_downloads', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('REVOKED', 'Revoked')], default='ACTIVE', max_length=20)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_report_shares', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='reporting.report')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Template description')),
                ('report_type', models.CharField(choices=[('VOLUNTEER_SUMMARY', 'Volunteer Summary Report'), ('VOLUNTEER_DETAILED', 'Detailed Volunteer Report'), ('EVENT_SUMMARY', 'Event Summary Report'), ('EVENT_DETAILED', 'Detailed Event Report'), ('VENUE_UTILIZATION', 'Venue Utilization Report'), ('ROLE_ASSIGNMENT', 'Role Assignment Report'), ('TRAINING_STATUS', 'Training Status Report'), ('BACKGROUND_CHECK', 'Background Check Report'), ('JUSTGO_SYNC', 'JustGo Synchronization Report'), ('EOI_ANALYTICS', 'EOI Analytics Report'), ('PERFORMANCE_METRICS', 'Performance Metrics Report'), ('ATTENDANCE_TRACKING', 'Attendance Tracking Report'), ('CUSTOM', 'Custom Report')], max_length=30)),
                ('default_parameters', models.JSONField(blank=True, default=dict, help_text='Default parameters for this template')),
                ('default_export_format', models.CharField(choices=[('CSV', 'CSV (Comma Separated Values)'), ('EXCEL', 'Excel (.xlsx)'), ('PDF', 'PDF Document'), ('JSON', 'JSON Data')], default='CSV', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False, help_text='Available to all users')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_report_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Schedule name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Schedule description')),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=20)),
                ('start_date', models.DateField(help_text='When to start generating reports')),
                ('end_date', models.DateField(blank=True, help_text='When to stop (optional)', null=True)),
                ('run_time', models.TimeField(default='09:00:00', help_text='Time of day to run')),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('DISABLED', 'Disabled')], default='ACTIVE', max_length=20)),
                ('email_recipients', models.JSONField(blank=True, default=list, help_text='Email addresses to send reports to')),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('run_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_report_schedules', to=settings.AUTH_USER_MODEL)),
                ('report_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reporting.reporttemplate')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['report_type', 'status'], name='reporting_r_report__cc1d17_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['created_by', 'created_at'], name='reporting_r_created_c78955_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['status', 'created_at'], name='reporting_r_status_c9fb64_idx'),
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['share_token'], name='reporting_r_share_t_cc3be9_idx'),
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['status', 'expires_at'], name='reporting_r_status_f2ad34_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['report_type', 'is_active'], name='reporting_r_report__a12015_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['is_public', 'is_active'], name='reporting_r_is_publ_4aa5fb_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['status', 'next_run'], name='reporting_r_status_1283c6_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['frequency', 'status'], name='reporting_r_frequen_3e427b_idx'),
        ),
    ]
