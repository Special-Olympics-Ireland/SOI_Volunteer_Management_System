# Generated by Django 5.0.14 on 2025-06-16 11:58

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0003_auto_20250613_2327'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('events', '0003_assignment_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('channels', models.JSONField(default=list, help_text='List of channels to send through')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('context_data', models.JSONField(default=dict, help_text='Context data used for rendering')),
                ('delivery_attempts', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('channel_type', models.CharField(choices=[('EMAIL', 'Email'), ('PUSH', 'Push Notification'), ('SMS', 'SMS'), ('WEBHOOK', 'Webhook'), ('SLACK', 'Slack'), ('TEAMS', 'Microsoft Teams')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(default=dict, help_text='Channel-specific configuration')),
                ('rate_limit_per_minute', models.IntegerField(default=60)),
                ('rate_limit_per_hour', models.IntegerField(default=1000)),
                ('max_retries', models.IntegerField(default=3)),
                ('retry_delay_seconds', models.IntegerField(default=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Channel',
                'verbose_name_plural': 'Notification Channels',
                'db_table': 'notification_channels',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=20)),
                ('message', models.TextField()),
                ('channel_type', models.CharField(max_length=20)),
                ('delivery_status', models.CharField(max_length=50)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('volunteer_notifications', models.BooleanField(default=True)),
                ('event_notifications', models.BooleanField(default=True)),
                ('task_notifications', models.BooleanField(default=True)),
                ('admin_notifications', models.BooleanField(default=True)),
                ('system_notifications', models.BooleanField(default=True)),
                ('training_notifications', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Start of quiet hours (no notifications)', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='End of quiet hours', null=True)),
                ('timezone', models.CharField(default='Europe/Dublin', max_length=50)),
                ('digest_frequency', models.CharField(choices=[('IMMEDIATE', 'Immediate'), ('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('DISABLED', 'Disabled')], default='IMMEDIATE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('volunteer_application', 'Volunteer Application'), ('volunteer_approved', 'Volunteer Approved'), ('volunteer_rejected', 'Volunteer Rejected'), ('event_assignment', 'Event Assignment'), ('event_reminder', 'Event Reminder'), ('event_cancelled', 'Event Cancelled'), ('task_assigned', 'Task Assigned'), ('task_completed', 'Task Completed'), ('task_overdue', 'Task Overdue'), ('admin_override', 'Admin Override'), ('system_alert', 'System Alert'), ('training_reminder', 'Training Reminder'), ('document_required', 'Document Required'), ('profile_update', 'Profile Update'), ('bulk_operation', 'Bulk Operation'), ('integration_error', 'Integration Error'), ('report_ready', 'Report Ready'), ('custom', 'Custom')], max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('title_template', models.CharField(help_text='Template for notification title with {variables}', max_length=255)),
                ('message_template', models.TextField(help_text='Template for notification message with {variables}')),
                ('default_priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('is_email_enabled', models.BooleanField(default=True)),
                ('is_push_enabled', models.BooleanField(default=True)),
                ('is_in_app_enabled', models.BooleanField(default=True)),
                ('target_user_types', models.JSONField(default=list, help_text='List of user types to send to')),
                ('target_roles', models.JSONField(default=list, help_text='List of roles to send to')),
                ('delay_minutes', models.IntegerField(default=0, help_text='Delay before sending notification')),
                ('expires_after_hours', models.IntegerField(default=72, help_text='Hours after which notification expires')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'ordering': ['notification_type', 'name'],
            },
        ),
        migrations.AlterModelOptions(
            name='venueinformation',
            options={'verbose_name': 'Venue Information', 'verbose_name_plural': 'Venue Information'},
        ),
        migrations.RemoveIndex(
            model_name='venueinformation',
            name='common_venu_venue_i_dfac78_idx',
        ),
        migrations.RemoveIndex(
            model_name='venueinformation',
            name='common_venu_info_ty_70328a_idx',
        ),
        migrations.RemoveIndex(
            model_name='venueinformation',
            name='common_venu_is_urge_d7b5e3_idx',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='content',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='display_order',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='info_type',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='is_urgent',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='title',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='valid_from',
        ),
        migrations.RemoveField(
            model_name='venueinformation',
            name='valid_until',
        ),
        migrations.AddField(
            model_name='venueinformation',
            name='accessibility_info',
            field=models.TextField(blank=True, help_text='Accessibility information'),
        ),
        migrations.AddField(
            model_name='venueinformation',
            name='contact_info',
            field=models.JSONField(default=dict, help_text='Contact information (JSON format)'),
        ),
        migrations.AddField(
            model_name='venueinformation',
            name='description',
            field=models.TextField(default='Venue information will be updated soon.', help_text='Public description of the venue'),
        ),
        migrations.AddField(
            model_name='venueinformation',
            name='facilities',
            field=models.JSONField(default=dict, help_text='Available facilities (JSON format)'),
        ),
        migrations.AddField(
            model_name='venueinformation',
            name='is_published',
            field=models.BooleanField(default=False, help_text='Whether this venue info is publicly visible'),
        ),
        migrations.AlterField(
            model_name='venueinformation',
            name='venue',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='public_info', to='events.venue'),
        ),
        migrations.AddField(
            model_name='notification',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='notificationchannel',
            unique_together={('name', 'channel_type')},
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.notificationchannel'),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='notification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='common.notification'),
        ),
        migrations.AddField(
            model_name='notificationpreference',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.notificationtemplate'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['notification', 'timestamp'], name='notificatio_notific_780bf9_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['level', 'timestamp'], name='notificatio_level_e7773b_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['channel_type', 'delivery_status'], name='notificatio_channel_dbc867_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_9dff33_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['is_active'], name='notificatio_is_acti_f33840_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_218e2a_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['status', 'scheduled_at'], name='notificatio_status_2ea0f1_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'created_at'], name='notificatio_priorit_22e6c2_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['expires_at'], name='notificatio_expires_66996e_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['content_type', 'object_id'], name='notificatio_content_3c688e_idx'),
        ),
    ]
