# Generated by Django 5.0.14 on 2025-06-13 21:59

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0001_initial'),
        ('events', '0003_assignment_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Content title', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly version of title', max_length=220, unique=True)),
                ('content_type', models.CharField(choices=[('NEWS', 'News Article'), ('FAQ', 'Frequently Asked Question'), ('ANNOUNCEMENT', 'Announcement'), ('GUIDE', 'Guide/Tutorial'), ('POLICY', 'Policy Document'), ('VENUE_INFO', 'Venue Information'), ('EVENT_UPDATE', 'Event Update')], default='NEWS', max_length=20)),
                ('summary', models.TextField(blank=True, help_text='Brief summary or excerpt', max_length=500)),
                ('content', models.TextField(help_text='Main content (supports HTML)')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='content/images/')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived'), ('SCHEDULED', 'Scheduled')], default='DRAFT', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('is_featured', models.BooleanField(default=False, help_text='Show in featured content')),
                ('is_pinned', models.BooleanField(default=False, help_text='Pin to top of list')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, help_text='When to publish this content')),
                ('expire_date', models.DateTimeField(blank=True, help_text='When to automatically archive', null=True)),
                ('target_audience', models.JSONField(blank=True, default=list, help_text='Target audience types (volunteers, staff, public, etc.)')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Content tags for categorization')),
                ('meta_description', models.CharField(blank=True, help_text='SEO meta description', max_length=160)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(help_text='Content author', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_content', to=settings.AUTH_USER_MODEL)),
                ('editor', models.ForeignKey(blank=True, help_text='Last editor', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_content', to=settings.AUTH_USER_MODEL)),
                ('related_events', models.ManyToManyField(blank=True, help_text='Events this content relates to', to='events.event')),
                ('related_venues', models.ManyToManyField(blank=True, help_text='Venues this content relates to', to='events.venue')),
            ],
            options={
                'ordering': ['-is_pinned', '-priority', '-publish_date'],
                'indexes': [models.Index(fields=['content_type', 'status'], name='common_cont_content_6126ff_idx'), models.Index(fields=['publish_date', 'status'], name='common_cont_publish_8bf1e3_idx'), models.Index(fields=['is_featured', 'status'], name='common_cont_is_feat_e5e68c_idx')],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='The question', max_length=300)),
                ('answer', models.TextField(help_text='The answer (supports HTML)')),
                ('category', models.CharField(choices=[('GENERAL', 'General'), ('REGISTRATION', 'Registration'), ('TRAINING', 'Training'), ('EVENTS', 'Events'), ('VENUES', 'Venues'), ('ROLES', 'Roles & Responsibilities'), ('TRANSPORT', 'Transport'), ('ACCOMMODATION', 'Accommodation'), ('FOOD', 'Food & Catering'), ('UNIFORMS', 'Uniforms & Equipment'), ('JUSTGO', 'JustGo Integration'), ('TECHNICAL', 'Technical Support')], default='GENERAL', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for better searchability')),
                ('target_audience', models.JSONField(blank=True, default=list, help_text='Who this FAQ is for (volunteers, staff, public)')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order within category')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('helpful_count', models.PositiveIntegerField(default=0)),
                ('not_helpful_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_faqs', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_faqs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'order', 'question'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='common_faq_categor_9447fb_idx'), models.Index(fields=['is_active', 'order'], name='common_faq_is_acti_6e119f_idx')],
            },
        ),
        migrations.CreateModel(
            name='VenueInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_type', models.CharField(choices=[('GENERAL', 'General Information'), ('DIRECTIONS', 'Directions & Transport'), ('FACILITIES', 'Facilities & Amenities'), ('ACCESSIBILITY', 'Accessibility Information'), ('SAFETY', 'Safety & Security'), ('SCHEDULE', 'Schedule & Events'), ('CONTACT', 'Contact Information'), ('UPDATES', 'Live Updates')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(help_text='Information content (supports HTML)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_urgent', models.BooleanField(default=False, help_text='Show as urgent/important')),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_venue_info', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_venue_info', to=settings.AUTH_USER_MODEL)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='information_items', to='events.venue')),
            ],
            options={
                'ordering': ['venue', 'info_type', 'display_order'],
                'indexes': [models.Index(fields=['venue', 'is_active'], name='common_venu_venue_i_dfac78_idx'), models.Index(fields=['info_type', 'is_active'], name='common_venu_info_ty_70328a_idx'), models.Index(fields=['is_urgent', 'valid_from'], name='common_venu_is_urge_d7b5e3_idx')],
            },
        ),
    ]
