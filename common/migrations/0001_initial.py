# Generated by Django 5.0.14 on 2025-06-13 11:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('EXPORT', 'Export'), ('IMPORT', 'Import'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('OVERRIDE', 'Override'), ('SYNC', 'Synchronize'), ('BACKUP', 'Backup'), ('RESTORE', 'Restore'), ('OTHER', 'Other')], help_text='Type of action performed', max_length=20)),
                ('action_description', models.TextField(help_text='Detailed description of the action')),
                ('session_key', models.CharField(blank=True, help_text='Session key for the action', max_length=40)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string')),
                ('object_id', models.CharField(blank=True, help_text='ID of the object affected', max_length=255)),
                ('object_representation', models.CharField(blank=True, help_text='String representation of the object', max_length=500)),
                ('changes', models.JSONField(blank=True, default=dict, help_text='Details of changes made')),
                ('old_values', models.JSONField(blank=True, default=dict, help_text='Previous values before change')),
                ('new_values', models.JSONField(blank=True, default=dict, help_text='New values after change')),
                ('request_method', models.CharField(blank=True, help_text='HTTP request method', max_length=10)),
                ('request_path', models.CharField(blank=True, help_text='Request path', max_length=500)),
                ('request_data', models.JSONField(blank=True, default=dict, help_text='Request data (sanitized)')),
                ('response_status', models.PositiveIntegerField(blank=True, help_text='HTTP response status code', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the action occurred')),
                ('duration_ms', models.PositiveIntegerField(blank=True, help_text='Duration of the action in milliseconds', null=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata')),
                ('content_type', models.ForeignKey(blank=True, help_text='Type of object affected', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'audit log',
                'verbose_name_plural': 'audit logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(help_text='Unique configuration key', max_length=100, unique=True)),
                ('name', models.CharField(help_text='Human-readable configuration name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of the configuration setting')),
                ('config_type', models.CharField(choices=[('SYSTEM', 'System Configuration'), ('FEATURE', 'Feature Configuration'), ('INTEGRATION', 'Integration Configuration'), ('SECURITY', 'Security Configuration'), ('NOTIFICATION', 'Notification Configuration'), ('WORKFLOW', 'Workflow Configuration'), ('UI', 'User Interface Configuration'), ('API', 'API Configuration'), ('OTHER', 'Other Configuration')], default='SYSTEM', help_text='Type of configuration', max_length=20)),
                ('value', models.JSONField(help_text='Configuration value (can be any JSON type)')),
                ('default_value', models.JSONField(blank=True, help_text='Default value for this configuration', null=True)),
                ('validation_rules', models.JSONField(blank=True, default=dict, help_text='Validation rules for the configuration value')),
                ('allowed_values', models.JSONField(blank=True, default=list, help_text='List of allowed values (if restricted)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this configuration is active')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this configuration is publicly visible')),
                ('is_editable', models.BooleanField(default=True, help_text='Whether this configuration can be edited')),
                ('requires_restart', models.BooleanField(default=False, help_text='Whether changing this config requires system restart')),
                ('version', models.PositiveIntegerField(default=1, help_text='Configuration version number')),
                ('previous_value', models.JSONField(blank=True, help_text='Previous configuration value', null=True)),
                ('change_reason', models.TextField(blank=True, help_text='Reason for the last change')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this configuration', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_configs', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this configuration', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'system configuration',
                'verbose_name_plural': 'system configurations',
                'ordering': ['config_type', 'key'],
            },
        ),
        migrations.CreateModel(
            name='AdminOverride',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('override_type', models.CharField(choices=[('AGE_REQUIREMENT', 'Age Requirement Override'), ('CREDENTIAL_REQUIREMENT', 'Credential Requirement Override'), ('CAPACITY_LIMIT', 'Capacity Limit Override'), ('DEADLINE_EXTENSION', 'Deadline Extension'), ('STATUS_CHANGE', 'Status Change Override'), ('ASSIGNMENT_RULE', 'Assignment Rule Override'), ('VERIFICATION_BYPASS', 'Verification Bypass'), ('PREREQUISITE_SKIP', 'Prerequisite Skip'), ('ROLE_RESTRICTION', 'Role Restriction Override'), ('SYSTEM_RULE', 'System Rule Override'), ('DATA_MODIFICATION', 'Data Modification Override'), ('EMERGENCY_ACCESS', 'Emergency Access Override'), ('OTHER', 'Other Override')], help_text='Type of override being applied', max_length=30)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('ACTIVE', 'Active Override'), ('EXPIRED', 'Expired'), ('REVOKED', 'Revoked'), ('COMPLETED', 'Completed')], default='PENDING', help_text='Current status of the override', max_length=20)),
                ('object_id', models.CharField(help_text='ID of the object being overridden', max_length=255)),
                ('title', models.CharField(help_text='Brief title describing the override', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of what is being overridden')),
                ('justification', models.TextField(help_text='Required justification for the override')),
                ('business_case', models.TextField(blank=True, help_text='Business case or reasoning for the override')),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='MEDIUM', help_text='Assessed risk level of this override', max_length=20)),
                ('impact_level', models.CharField(choices=[('MINIMAL', 'Minimal Impact'), ('LOW', 'Low Impact'), ('MEDIUM', 'Medium Impact'), ('HIGH', 'High Impact'), ('SEVERE', 'Severe Impact')], default='LOW', help_text='Assessed impact level of this override', max_length=20)),
                ('risk_assessment', models.TextField(blank=True, help_text='Detailed risk assessment and mitigation measures')),
                ('impact_assessment', models.TextField(blank=True, help_text='Detailed impact assessment on system and users')),
                ('override_data', models.JSONField(blank=True, default=dict, help_text='Specific override data and parameters')),
                ('original_values', models.JSONField(blank=True, default=dict, help_text='Original values before override')),
                ('new_values', models.JSONField(blank=True, default=dict, help_text='New values after override')),
                ('requested_at', models.DateTimeField(auto_now_add=True, help_text='When the override was requested')),
                ('approved_at', models.DateTimeField(blank=True, help_text='When the override was approved', null=True)),
                ('effective_from', models.DateTimeField(blank=True, help_text='When the override becomes effective', null=True)),
                ('effective_until', models.DateTimeField(blank=True, help_text='When the override expires', null=True)),
                ('applied_at', models.DateTimeField(blank=True, help_text='When the override was actually applied', null=True)),
                ('revoked_at', models.DateTimeField(blank=True, help_text='When the override was revoked', null=True)),
                ('approval_notes', models.TextField(blank=True, help_text='Notes from the approval process')),
                ('review_notes', models.TextField(blank=True, help_text='Notes from the review process')),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection if applicable')),
                ('is_emergency', models.BooleanField(default=False, help_text='Whether this is an emergency override')),
                ('priority_level', models.PositiveIntegerField(default=5, help_text='Priority level (1=highest, 10=lowest)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('requires_immediate_action', models.BooleanField(default=False, help_text='Whether this override requires immediate action')),
                ('compliance_notes', models.TextField(blank=True, help_text='Compliance considerations and documentation')),
                ('regulatory_impact', models.TextField(blank=True, help_text='Impact on regulatory compliance')),
                ('documentation_required', models.BooleanField(default=True, help_text='Whether additional documentation is required')),
                ('documentation_provided', models.BooleanField(default=False, help_text='Whether required documentation has been provided')),
                ('requires_monitoring', models.BooleanField(default=True, help_text='Whether this override requires ongoing monitoring')),
                ('monitoring_frequency', models.CharField(choices=[('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('AS_NEEDED', 'As Needed')], default='DAILY', help_text='Frequency of monitoring required', max_length=20)),
                ('last_monitored_at', models.DateTimeField(blank=True, help_text='When the override was last monitored', null=True)),
                ('monitoring_notes', models.TextField(blank=True, help_text='Notes from monitoring activities')),
                ('notification_sent', models.BooleanField(default=False, help_text='Whether notifications have been sent')),
                ('stakeholders_notified', models.JSONField(blank=True, default=list, help_text='List of stakeholders who have been notified')),
                ('communication_log', models.JSONField(blank=True, default=list, help_text='Log of communications regarding this override')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status_changed_at', models.DateTimeField(blank=True, help_text='When status was last changed', null=True)),
                ('status_change_reason', models.TextField(blank=True, help_text='Reason for status change')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization and search')),
                ('external_references', models.JSONField(blank=True, default=dict, help_text='External system references and IDs')),
                ('custom_fields', models.JSONField(blank=True, default=dict, help_text='Custom fields for specific override types')),
                ('approved_by', models.ForeignKey(blank=True, help_text='User who approved the override', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_overrides', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(help_text='Type of object being overridden', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('requested_by', models.ForeignKey(help_text='User who requested the override', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_overrides', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='User who reviewed the override', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_overrides', to=settings.AUTH_USER_MODEL)),
                ('status_changed_by', models.ForeignKey(blank=True, help_text='User who last changed the status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_changed_overrides', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'admin override',
                'verbose_name_plural': 'admin overrides',
                'ordering': ['-created_at', '-priority_level', 'status'],
                'indexes': [models.Index(fields=['override_type', 'status'], name='common_admi_overrid_87b6df_idx'), models.Index(fields=['content_type', 'object_id'], name='common_admi_content_5e2750_idx'), models.Index(fields=['requested_by', 'status'], name='common_admi_request_4a1269_idx'), models.Index(fields=['approved_by', 'approved_at'], name='common_admi_approve_7e134a_idx'), models.Index(fields=['risk_level', 'impact_level'], name='common_admi_risk_le_ea9c65_idx'), models.Index(fields=['is_emergency', 'priority_level'], name='common_admi_is_emer_300ac9_idx'), models.Index(fields=['effective_from', 'effective_until'], name='common_admi_effecti_c871c3_idx'), models.Index(fields=['status', 'created_at'], name='common_admi_status_028b8f_idx'), models.Index(fields=['requires_monitoring', 'last_monitored_at'], name='common_admi_require_9a3d4c_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='adminoverride',
            constraint=models.CheckConstraint(check=models.Q(('priority_level__gte', 1), ('priority_level__lte', 10)), name='adminoverride_priority_level_range'),
        ),
        migrations.AddConstraint(
            model_name='adminoverride',
            constraint=models.CheckConstraint(check=models.Q(('effective_from__lte', models.F('effective_until')), ('effective_until__isnull', True), _connector='OR'), name='adminoverride_effective_dates_valid'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='common_audi_user_id_740557_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action_type', 'timestamp'], name='common_audi_action__35a964_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['content_type', 'object_id'], name='common_audi_content_440b6f_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['ip_address', 'timestamp'], name='common_audi_ip_addr_ae4b0a_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['timestamp'], name='common_audi_timesta_4ebe40_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfig',
            index=models.Index(fields=['key'], name='common_syst_key_733e35_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfig',
            index=models.Index(fields=['config_type', 'is_active'], name='common_syst_config__7fcce9_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfig',
            index=models.Index(fields=['is_active', 'is_public'], name='common_syst_is_acti_70e781_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfig',
            index=models.Index(fields=['created_at'], name='common_syst_created_3cd89d_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfig',
            index=models.Index(fields=['updated_at'], name='common_syst_updated_4fed0b_idx'),
        ),
    ]
